// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoBanco.Server.Data;

#nullable disable

namespace ProyectoBanco.Server.Migrations
{
    [DbContext(typeof(BancoContext))]
    partial class BancoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoBanco.Server.Models.Cuentum", b =>
                {
                    b.Property<int>("NumCuenta")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(11)
                        .HasColumnType("int(11)")
                        .HasColumnName("Num_Cuenta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumCuenta"));

                    b.Property<string>("Contraseña")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("DetallesC")
                        .HasColumnType("int(11)")
                        .HasColumnName("Detalles_C");

                    b.Property<string>("IdUsuario")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("ID_Usuario");

                    b.HasKey("NumCuenta");

                    b.HasIndex("DetallesC");

                    b.HasIndex("IdUsuario");

                    b.ToTable("cuenta");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.Dato", b =>
                {
                    b.Property<int>("IdDatos")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(11)
                        .HasColumnType("int(11)")
                        .HasColumnName("ID_Datos");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDatos"));

                    b.Property<string>("ApellidoM")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ApellidoP")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Año")
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Dia")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Mes")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Nombres")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("IdDatos");

                    b.ToTable("datos");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.DetallesCuentum", b =>
                {
                    b.Property<int>("DetallesC")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(11)
                        .HasColumnType("int(11)")
                        .HasColumnName("Detalles_C");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetallesC"));

                    b.Property<int?>("IdHistorial")
                        .HasColumnType("int(11)")
                        .HasColumnName("ID_Historial");

                    b.Property<int?>("NBoleto")
                        .HasColumnType("int(11)")
                        .HasColumnName("N_Boleto");

                    b.Property<string>("PrestamoA")
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)");

                    b.Property<int?>("Saldo")
                        .HasPrecision(11)
                        .HasColumnType("int(11)");

                    b.HasKey("DetallesC");

                    b.HasIndex("IdHistorial");

                    b.HasIndex("NBoleto");

                    b.ToTable("detalles_cuenta");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.DetallesEmpleado", b =>
                {
                    b.Property<int>("DetallesE")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(11)
                        .HasColumnType("int(11)")
                        .HasColumnName("Detalles_E");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetallesE"));

                    b.Property<int?>("IdDatos")
                        .HasColumnType("int(11)")
                        .HasColumnName("ID_Datos");

                    b.Property<int?>("PrestamosAprobados")
                        .HasPrecision(11)
                        .HasColumnType("int(11)")
                        .HasColumnName("Prestamos_Aprobados");

                    b.HasKey("DetallesE");

                    b.HasIndex("IdDatos");

                    b.ToTable("detalles_empleado");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.DetallesGerente", b =>
                {
                    b.Property<int>("DetallesG")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(11)
                        .HasColumnType("int(11)")
                        .HasColumnName("Detalles_G");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetallesG"));

                    b.Property<int?>("DiasVacaciones")
                        .HasPrecision(11)
                        .HasColumnType("int(11)")
                        .HasColumnName("Dias_Vacaciones");

                    b.Property<int?>("IdDatos")
                        .HasColumnType("int(11)")
                        .HasColumnName("ID_Datos");

                    b.HasKey("DetallesG");

                    b.HasIndex("IdDatos");

                    b.ToTable("detalles_gerente");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.DetallesHistorial", b =>
                {
                    b.Property<int>("DetallesH")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(11)
                        .HasColumnType("int(11)")
                        .HasColumnName("Detalles_H");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetallesH"));

                    b.Property<string>("Estado")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("NPagosPendientes")
                        .HasPrecision(11)
                        .HasColumnType("int(11)")
                        .HasColumnName("N_Pagos_Pendientes");

                    b.Property<int?>("NPagosRealizados")
                        .HasPrecision(11)
                        .HasColumnType("int(11)")
                        .HasColumnName("N_Pagos_Realizados");

                    b.HasKey("DetallesH");

                    b.ToTable("detalles_historial");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.DetallesPrestamo", b =>
                {
                    b.Property<int>("DetallesP")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(11)
                        .HasColumnType("int(11)")
                        .HasColumnName("Detalles_P");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetallesP"));

                    b.Property<int?>("FechaAprobacion")
                        .HasPrecision(11)
                        .HasColumnType("int(11)")
                        .HasColumnName("Fecha_Aprobacion");

                    b.Property<int?>("FechaLiquidacion")
                        .HasPrecision(11)
                        .HasColumnType("int(11)")
                        .HasColumnName("Fecha_Liquidacion");

                    b.Property<int?>("FechaSolicitud")
                        .HasPrecision(11)
                        .HasColumnType("int(11)")
                        .HasColumnName("Fecha_Solicitud");

                    b.Property<int?>("Periodo")
                        .HasPrecision(11)
                        .HasColumnType("int(11)");

                    b.HasKey("DetallesP");

                    b.ToTable("detalles_prestamo");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.DetallesUsuario", b =>
                {
                    b.Property<int>("DetallesU")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(11)
                        .HasColumnType("int(11)")
                        .HasColumnName("Detalles_U");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetallesU"));

                    b.Property<string>("Curp")
                        .HasMaxLength(18)
                        .HasColumnType("varchar(18)")
                        .HasColumnName("CURP");

                    b.Property<int?>("IdDatos")
                        .HasColumnType("int(11)")
                        .HasColumnName("ID_Datos");

                    b.Property<string>("Solicitud")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("DetallesU");

                    b.HasIndex("IdDatos");

                    b.ToTable("detalles_usuario");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.Empleado", b =>
                {
                    b.Property<int>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(11)
                        .HasColumnType("int(11)")
                        .HasColumnName("ID_Empleado");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmpleado"));

                    b.Property<int?>("DetallesE")
                        .HasColumnType("int(11)")
                        .HasColumnName("Detalles_E");

                    b.Property<int?>("Nomina")
                        .HasColumnType("int(11)");

                    b.HasKey("IdEmpleado");

                    b.HasIndex("DetallesE");

                    b.HasIndex("Nomina");

                    b.ToTable("empleado");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.Gerente", b =>
                {
                    b.Property<int>("IdGerente")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(11)
                        .HasColumnType("int(11)")
                        .HasColumnName("ID_Gerente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGerente"));

                    b.Property<int?>("DetallesG")
                        .HasColumnType("int(11)")
                        .HasColumnName("Detalles_G");

                    b.Property<string>("IdUsuario")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("ID_Usuario");

                    b.Property<int?>("Nomina")
                        .HasColumnType("int(11)");

                    b.HasKey("IdGerente");

                    b.HasIndex("DetallesG");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("Nomina");

                    b.ToTable("gerente");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.Historial", b =>
                {
                    b.Property<int>("IdHistorial")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(11)
                        .HasColumnType("int(11)")
                        .HasColumnName("ID_Historial");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistorial"));

                    b.Property<int?>("Cantidad")
                        .HasPrecision(11)
                        .HasColumnType("int(11)");

                    b.Property<int?>("DetallesH")
                        .HasColumnType("int(11)")
                        .HasColumnName("Detalles_H");

                    b.Property<int?>("Folio")
                        .HasColumnType("int(11)");

                    b.HasKey("IdHistorial");

                    b.HasIndex("DetallesH");

                    b.HasIndex("Folio");

                    b.ToTable("historial");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.IdProvider", b =>
                {
                    b.Property<int>("IdProvider1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ID_Provider");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProvider1"));

                    b.Property<int?>("DetallesC")
                        .HasColumnType("int(11)")
                        .HasColumnName("Detalles_C");

                    b.Property<int?>("DetallesE")
                        .HasColumnType("int(11)")
                        .HasColumnName("Detalles_E");

                    b.Property<int?>("DetallesG")
                        .HasColumnType("int(11)")
                        .HasColumnName("Detalles_G");

                    b.Property<int?>("DetallesH")
                        .HasColumnType("int(11)")
                        .HasColumnName("Detalles_H");

                    b.Property<int?>("DetallesP")
                        .HasColumnType("int(11)")
                        .HasColumnName("Detalles_P");

                    b.Property<int?>("DetallesU")
                        .HasColumnType("int(11)")
                        .HasColumnName("Detalles_U");

                    b.Property<int?>("IdDatos")
                        .HasColumnType("int(11)")
                        .HasColumnName("ID_Datos");

                    b.Property<int?>("IdEmpleado")
                        .HasColumnType("int(11)")
                        .HasColumnName("ID_Empleado");

                    b.Property<int?>("IdGerente")
                        .HasColumnType("int(11)")
                        .HasColumnName("ID_Gerente");

                    b.Property<int?>("IdHistorial")
                        .HasColumnType("int(11)")
                        .HasColumnName("ID_Historial");

                    b.HasKey("IdProvider1");

                    b.HasIndex("DetallesC");

                    b.HasIndex("DetallesE");

                    b.HasIndex("DetallesG");

                    b.HasIndex("DetallesH");

                    b.HasIndex("DetallesP");

                    b.HasIndex("DetallesU");

                    b.HasIndex("IdDatos");

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdGerente");

                    b.HasIndex("IdHistorial");

                    b.ToTable("id_provider");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.Nomina", b =>
                {
                    b.Property<int>("Nomina1")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(11)
                        .HasColumnType("int(11)")
                        .HasColumnName("Nomina");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Nomina1"));

                    b.Property<int?>("DetallesE")
                        .HasColumnType("int(11)")
                        .HasColumnName("Detalles_E");

                    b.Property<int?>("DetallesG")
                        .HasColumnType("int(11)")
                        .HasColumnName("Detalles_G");

                    b.HasKey("Nomina1");

                    b.HasIndex("DetallesE");

                    b.HasIndex("DetallesG");

                    b.ToTable("nomina");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.Prestamo", b =>
                {
                    b.Property<int>("Folio")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(11)
                        .HasColumnType("int(11)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Folio"));

                    b.Property<int?>("DetallesP")
                        .HasColumnType("int(11)")
                        .HasColumnName("Detalles_P");

                    b.Property<int?>("FechaUpago")
                        .HasPrecision(11)
                        .HasColumnType("int(11)")
                        .HasColumnName("Fecha_UPago");

                    b.Property<int?>("IdEmpleado")
                        .HasColumnType("int(11)")
                        .HasColumnName("ID_Empleado");

                    b.Property<int?>("IdGerente")
                        .HasColumnType("int(11)")
                        .HasColumnName("ID_Gerente");

                    b.Property<decimal>("Monto")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal");

                    b.Property<int?>("NumCuenta")
                        .HasColumnType("int(11)")
                        .HasColumnName("Num_Cuenta");

                    b.Property<decimal>("PagoMes")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal")
                        .HasColumnName("Pago_Mes");

                    b.Property<string>("Status")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Folio");

                    b.HasIndex("DetallesP");

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdGerente");

                    b.HasIndex("NumCuenta");

                    b.ToTable("prestamos");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.Rifa", b =>
                {
                    b.Property<int>("NBoleto")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(11)
                        .HasColumnType("int(11)")
                        .HasColumnName("N_Boleto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NBoleto"));

                    b.Property<int?>("FechaBoleto")
                        .HasPrecision(11)
                        .HasColumnType("int(11)")
                        .HasColumnName("Fecha_Boleto");

                    b.HasKey("NBoleto");

                    b.ToTable("rifa");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.Solicitud", b =>
                {
                    b.Property<int>("IdSolicitud")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(11)
                        .HasColumnType("int(11)")
                        .HasColumnName("ID_Solicitud");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSolicitud"));

                    b.Property<int?>("DetallesU")
                        .HasColumnType("int(11)")
                        .HasColumnName("Detalles_U");

                    b.Property<string>("StatusSolicitud")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Status_Solicitud");

                    b.HasKey("IdSolicitud");

                    b.HasIndex("DetallesU");

                    b.ToTable("solicitud");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.Usuario", b =>
                {
                    b.Property<string>("IdUsuario")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("ID_Usuario");

                    b.Property<int?>("DetallesU")
                        .HasColumnType("int(11)")
                        .HasColumnName("Detalles_U");

                    b.HasKey("IdUsuario");

                    b.HasIndex("DetallesU");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.Cuentum", b =>
                {
                    b.HasOne("ProyectoBanco.Server.Models.DetallesCuentum", "DetallesCNavigation")
                        .WithMany("Cuenta")
                        .HasForeignKey("DetallesC");

                    b.HasOne("ProyectoBanco.Server.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Cuenta")
                        .HasForeignKey("IdUsuario");

                    b.Navigation("DetallesCNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.DetallesCuentum", b =>
                {
                    b.HasOne("ProyectoBanco.Server.Models.Historial", "IdHistorialNavigation")
                        .WithMany("DetallesCuenta")
                        .HasForeignKey("IdHistorial");

                    b.HasOne("ProyectoBanco.Server.Models.Rifa", "NBoletoNavigation")
                        .WithMany("DetallesCuenta")
                        .HasForeignKey("NBoleto");

                    b.Navigation("IdHistorialNavigation");

                    b.Navigation("NBoletoNavigation");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.DetallesEmpleado", b =>
                {
                    b.HasOne("ProyectoBanco.Server.Models.Dato", "IdDatosNavigation")
                        .WithMany("DetallesEmpleados")
                        .HasForeignKey("IdDatos");

                    b.Navigation("IdDatosNavigation");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.DetallesGerente", b =>
                {
                    b.HasOne("ProyectoBanco.Server.Models.Dato", "IdDatosNavigation")
                        .WithMany("DetallesGerentes")
                        .HasForeignKey("IdDatos");

                    b.Navigation("IdDatosNavigation");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.DetallesUsuario", b =>
                {
                    b.HasOne("ProyectoBanco.Server.Models.Dato", "IdDatosNavigation")
                        .WithMany("DetallesUsuarios")
                        .HasForeignKey("IdDatos");

                    b.Navigation("IdDatosNavigation");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.Empleado", b =>
                {
                    b.HasOne("ProyectoBanco.Server.Models.DetallesEmpleado", "DetallesENavigation")
                        .WithMany("Empleados")
                        .HasForeignKey("DetallesE");

                    b.HasOne("ProyectoBanco.Server.Models.Nomina", "NominaNavigation")
                        .WithMany("Empleados")
                        .HasForeignKey("Nomina");

                    b.Navigation("DetallesENavigation");

                    b.Navigation("NominaNavigation");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.Gerente", b =>
                {
                    b.HasOne("ProyectoBanco.Server.Models.DetallesGerente", "DetallesGNavigation")
                        .WithMany("Gerentes")
                        .HasForeignKey("DetallesG");

                    b.HasOne("ProyectoBanco.Server.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Gerentes")
                        .HasForeignKey("IdUsuario");

                    b.HasOne("ProyectoBanco.Server.Models.Nomina", "NominaNavigation")
                        .WithMany("Gerentes")
                        .HasForeignKey("Nomina");

                    b.Navigation("DetallesGNavigation");

                    b.Navigation("IdUsuarioNavigation");

                    b.Navigation("NominaNavigation");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.Historial", b =>
                {
                    b.HasOne("ProyectoBanco.Server.Models.DetallesHistorial", "DetallesHNavigation")
                        .WithMany("Historials")
                        .HasForeignKey("DetallesH");

                    b.HasOne("ProyectoBanco.Server.Models.Prestamo", "FolioNavigation")
                        .WithMany("Historials")
                        .HasForeignKey("Folio");

                    b.Navigation("DetallesHNavigation");

                    b.Navigation("FolioNavigation");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.IdProvider", b =>
                {
                    b.HasOne("ProyectoBanco.Server.Models.DetallesCuentum", "DetallesCNavigation")
                        .WithMany("IdProviders")
                        .HasForeignKey("DetallesC");

                    b.HasOne("ProyectoBanco.Server.Models.DetallesEmpleado", "DetallesENavigation")
                        .WithMany("IdProviders")
                        .HasForeignKey("DetallesE");

                    b.HasOne("ProyectoBanco.Server.Models.DetallesGerente", "DetallesGNavigation")
                        .WithMany("IdProviders")
                        .HasForeignKey("DetallesG");

                    b.HasOne("ProyectoBanco.Server.Models.DetallesHistorial", "DetallesHNavigation")
                        .WithMany("IdProviders")
                        .HasForeignKey("DetallesH");

                    b.HasOne("ProyectoBanco.Server.Models.DetallesPrestamo", "DetallesPNavigation")
                        .WithMany("IdProviders")
                        .HasForeignKey("DetallesP");

                    b.HasOne("ProyectoBanco.Server.Models.DetallesUsuario", "DetallesUNavigation")
                        .WithMany("IdProviders")
                        .HasForeignKey("DetallesU");

                    b.HasOne("ProyectoBanco.Server.Models.Dato", "IdDatosNavigation")
                        .WithMany("IdProviders")
                        .HasForeignKey("IdDatos");

                    b.HasOne("ProyectoBanco.Server.Models.Empleado", "IdEmpleadoNavigation")
                        .WithMany("IdProviders")
                        .HasForeignKey("IdEmpleado");

                    b.HasOne("ProyectoBanco.Server.Models.Gerente", "IdGerenteNavigation")
                        .WithMany("IdProviders")
                        .HasForeignKey("IdGerente");

                    b.HasOne("ProyectoBanco.Server.Models.Historial", "IdHistorialNavigation")
                        .WithMany("IdProviders")
                        .HasForeignKey("IdHistorial");

                    b.Navigation("DetallesCNavigation");

                    b.Navigation("DetallesENavigation");

                    b.Navigation("DetallesGNavigation");

                    b.Navigation("DetallesHNavigation");

                    b.Navigation("DetallesPNavigation");

                    b.Navigation("DetallesUNavigation");

                    b.Navigation("IdDatosNavigation");

                    b.Navigation("IdEmpleadoNavigation");

                    b.Navigation("IdGerenteNavigation");

                    b.Navigation("IdHistorialNavigation");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.Nomina", b =>
                {
                    b.HasOne("ProyectoBanco.Server.Models.DetallesEmpleado", "DetallesENavigation")
                        .WithMany("Nominas")
                        .HasForeignKey("DetallesE");

                    b.HasOne("ProyectoBanco.Server.Models.DetallesGerente", "DetallesGNavigation")
                        .WithMany("Nominas")
                        .HasForeignKey("DetallesG");

                    b.Navigation("DetallesENavigation");

                    b.Navigation("DetallesGNavigation");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.Prestamo", b =>
                {
                    b.HasOne("ProyectoBanco.Server.Models.DetallesPrestamo", "DetallesPNavigation")
                        .WithMany("Prestamos")
                        .HasForeignKey("DetallesP");

                    b.HasOne("ProyectoBanco.Server.Models.Empleado", "IdEmpleadoNavigation")
                        .WithMany("Prestamos")
                        .HasForeignKey("IdEmpleado");

                    b.HasOne("ProyectoBanco.Server.Models.Gerente", "IdGerenteNavigation")
                        .WithMany("Prestamos")
                        .HasForeignKey("IdGerente");

                    b.HasOne("ProyectoBanco.Server.Models.Cuentum", "NumCuentaNavigation")
                        .WithMany("Prestamos")
                        .HasForeignKey("NumCuenta");

                    b.Navigation("DetallesPNavigation");

                    b.Navigation("IdEmpleadoNavigation");

                    b.Navigation("IdGerenteNavigation");

                    b.Navigation("NumCuentaNavigation");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.Solicitud", b =>
                {
                    b.HasOne("ProyectoBanco.Server.Models.DetallesUsuario", "DetallesUNavigation")
                        .WithMany("Solicituds")
                        .HasForeignKey("DetallesU");

                    b.Navigation("DetallesUNavigation");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.Usuario", b =>
                {
                    b.HasOne("ProyectoBanco.Server.Models.DetallesUsuario", "DetallesUNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("DetallesU");

                    b.Navigation("DetallesUNavigation");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.Cuentum", b =>
                {
                    b.Navigation("Prestamos");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.Dato", b =>
                {
                    b.Navigation("DetallesEmpleados");

                    b.Navigation("DetallesGerentes");

                    b.Navigation("DetallesUsuarios");

                    b.Navigation("IdProviders");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.DetallesCuentum", b =>
                {
                    b.Navigation("Cuenta");

                    b.Navigation("IdProviders");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.DetallesEmpleado", b =>
                {
                    b.Navigation("Empleados");

                    b.Navigation("IdProviders");

                    b.Navigation("Nominas");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.DetallesGerente", b =>
                {
                    b.Navigation("Gerentes");

                    b.Navigation("IdProviders");

                    b.Navigation("Nominas");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.DetallesHistorial", b =>
                {
                    b.Navigation("Historials");

                    b.Navigation("IdProviders");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.DetallesPrestamo", b =>
                {
                    b.Navigation("IdProviders");

                    b.Navigation("Prestamos");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.DetallesUsuario", b =>
                {
                    b.Navigation("IdProviders");

                    b.Navigation("Solicituds");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.Empleado", b =>
                {
                    b.Navigation("IdProviders");

                    b.Navigation("Prestamos");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.Gerente", b =>
                {
                    b.Navigation("IdProviders");

                    b.Navigation("Prestamos");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.Historial", b =>
                {
                    b.Navigation("DetallesCuenta");

                    b.Navigation("IdProviders");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.Nomina", b =>
                {
                    b.Navigation("Empleados");

                    b.Navigation("Gerentes");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.Prestamo", b =>
                {
                    b.Navigation("Historials");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.Rifa", b =>
                {
                    b.Navigation("DetallesCuenta");
                });

            modelBuilder.Entity("ProyectoBanco.Server.Models.Usuario", b =>
                {
                    b.Navigation("Cuenta");

                    b.Navigation("Gerentes");
                });
#pragma warning restore 612, 618
        }
    }
}
